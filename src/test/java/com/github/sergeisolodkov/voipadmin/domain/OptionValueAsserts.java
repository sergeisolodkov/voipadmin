package com.github.sergeisolodkov.voipadmin.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OptionValueAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOptionValueAllPropertiesEquals(OptionValue expected, OptionValue actual) {
        assertOptionValueAutoGeneratedPropertiesEquals(expected, actual);
        assertOptionValueAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOptionValueAllUpdatablePropertiesEquals(OptionValue expected, OptionValue actual) {
        assertOptionValueUpdatableFieldsEquals(expected, actual);
        assertOptionValueUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOptionValueAutoGeneratedPropertiesEquals(OptionValue expected, OptionValue actual) {
        assertThat(expected)
            .as("Verify OptionValue auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOptionValueUpdatableFieldsEquals(OptionValue expected, OptionValue actual) {
        assertThat(expected)
            .as("Verify OptionValue relevant properties")
            .satisfies(e -> assertThat(e.getValue()).as("check value").isEqualTo(actual.getValue()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOptionValueUpdatableRelationshipsEquals(OptionValue expected, OptionValue actual) {
        assertThat(expected)
            .as("Verify OptionValue relationships")
            .satisfies(e -> assertThat(e.getSettings()).as("check settings").isEqualTo(actual.getSettings()))
            .satisfies(e -> assertThat(e.getOption()).as("check option").isEqualTo(actual.getOption()));
    }
}
