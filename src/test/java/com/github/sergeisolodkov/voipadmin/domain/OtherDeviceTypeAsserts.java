package com.github.sergeisolodkov.voipadmin.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OtherDeviceTypeAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOtherDeviceTypeAllPropertiesEquals(OtherDeviceType expected, OtherDeviceType actual) {
        assertOtherDeviceTypeAutoGeneratedPropertiesEquals(expected, actual);
        assertOtherDeviceTypeAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOtherDeviceTypeAllUpdatablePropertiesEquals(OtherDeviceType expected, OtherDeviceType actual) {
        assertOtherDeviceTypeUpdatableFieldsEquals(expected, actual);
        assertOtherDeviceTypeUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOtherDeviceTypeAutoGeneratedPropertiesEquals(OtherDeviceType expected, OtherDeviceType actual) {
        assertThat(expected)
            .as("Verify OtherDeviceType auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOtherDeviceTypeUpdatableFieldsEquals(OtherDeviceType expected, OtherDeviceType actual) {
        assertThat(expected)
            .as("Verify OtherDeviceType relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOtherDeviceTypeUpdatableRelationshipsEquals(OtherDeviceType expected, OtherDeviceType actual) {
        // empty method
    }
}
